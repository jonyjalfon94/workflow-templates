# Define Metadata
name: "Build and Push Python"
description: "Build a python package and Pushes it to PyPi registry"

# Define Inputs
inputs:
  registry_username:
    description: "Username for PyPi registry"
    required: true
  registry_password:
    description: "Password for PyPi registry"
    required: true
  registry_url:
    description: "URL of the registry where the package will be published"
    required: true
  registry_path:
    description: "Path in the registry where the package will be published"
    required: true
  dir:
    description: "Directory where setup.py is located"
    required: true
  setupFileName:
    description: "Name of the setup.py file"
    required: true

# Define Environment Variables
env:
  pypiWithRepo: ${{ inputs.registry_url }}/${{ inputs.registry_path }}

# Define this workflow as a composite action
runs:
  using: "composite"
  steps:

# Package Python
    - name: Package Python
      run: |-
        pip install --upgrade pip
        pip install setuptools wheel
        python ${{ inputs.dir }}/${{ inputs.setupFileName }} sdist --dist-dir=${{ inputs.dir }} bdist_wheel

# Publish Python
    - name: Upload Package
      run: |-
        pip install --upgrade pip
        pip install twine
        python -m twine upload --repository-url ${{ env.pypiWithRepo }} --username ${{ inputs.registry_username }} --password ${{ inputs.registry_password }} --non-interactive ${{ inputs.dir }}/dist/*      