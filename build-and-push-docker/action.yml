name: "Build and Push Docker"
description: "Build a container image and Pushes it to Docker registry"

inputs:
  registry_username:
    description: "Username for image registry"
    required: true
  registry_password:
    description: "Password for image registry"
    required: true
  image_name:
    description: "Name of the image to push"
    required: true
  tag: 
    description: "How to tag the image. Default: latest"
  build_args:
    description: "A list of extra build args. Default: []"
  lint:
    description: "If true it will lint using the lint stage of the Dockerfile. Default: false"
  test:
    description: "If true it will test using the lint stage of the Dockerfile. Default: false"

runs:
  using: "composite"
  steps:
      - name: Setup BuildX
        uses: docker/setup-buildx-action@v1

      - name: Login to the Registry
        uses: docker/login-action@v1
        with:
          username: ${{inputs.registry_username}}
          password: ${{inputs.registry_password}}
      
      - name: Set the tag
        shell: bash
        run: |
          if [ -z "${{inputs.tag}}" ]
          then
            echo "final_tag=latest" >> $GITHUB_ENV
          else
            echo "final_tag=${{inputs.tag}}" >> $GITHUB_ENV
          fi

      - name: Lint
        if: ${{ inputs.lint == true }}
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          tags: ${{inputs.registry_username}}/${{inputs.image_name}}:${{env.final_tag}}
          build-args: ${{ inputs.build_args }}
          target: lint

      - name: Test
        if: ${{ inputs.test == true }}
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          tags: ${{inputs.registry_username}}/${{inputs.image_name}}:${{env.final_tag}}
          build-args: ${{ inputs.build_args }}
          target: test-results
          output: "type=local,dest=out"
      
      - name: Archive code coverage results
        if: ${{ inputs.test == true }}
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: out

      - name: Build and Push the Image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{inputs.registry_username}}/${{inputs.image_name}}:${{env.final_tag}}
          build-args: ${{ inputs.build_args }}
          target: production
