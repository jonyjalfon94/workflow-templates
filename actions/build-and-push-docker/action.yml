name: "Build and Push Docker"
description: "Build a container image and Pushes it to Docker registry"

inputs:
  docker_username:
    description: "Username for Docker registry"
    required: true
  docker_password:
    description: "Password for Docker registry"
    required: true
  image_name:
    description: "Name of the image to push"
    required: true
  tag: 
    description: "How to tag the image. Default: latest"
    required: false
  build_args:
    description: "A list of extra build args. Default: []"
    required: false
  github_token:
    required: true
    description: "Github Token used to create the release"
  push:
    required: true
    description: "Wether to push the image or not"
  target: 
    required: true
    description: "Target image in multistage build"

runs:
  using: "composite"
  steps:

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          clean: false

      - name: Login to the Registry
        uses: docker/login-action@v1
        with:
          username: ${{inputs.docker_username}}
          password: ${{inputs.docker_password}}
      
      - name: Setup BuildX
        uses: docker/setup-buildx-action@v1

      - name: Set the tag
        shell: bash
        run: |
          if [ -z "${{inputs.tag}}" ]
          then
            echo "final_tag=latest" >> $GITHUB_ENV
          else
            echo "final_tag=${{inputs.tag}}" >> $GITHUB_ENV
          fi

      - name: Semantic versioning
        id: versioning
        uses: PaulHatch/semantic-version@v4.0.2
        with:
          tag_prefix: ''
          branch: main
          major_pattern: "BREAKING CHANGE:"
          minor_pattern: "feat:"

      - name: Generate Docker Metadata
        id: metadata
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ inputs.docker_username }}/${{ inputs.image_name }}
          # generate Docker tags based on the following events/attributes
          tags: |
            ${{ steps.versioning.outputs.version }}
            ${{ github.sha }}
            latest

      - name: Build and Push the Image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ inputs.push }}
          tags: ${{ steps.metadata.outputs.tags }}
          build-args: ${{ inputs.build_args }}
          target: ${{ inputs.target }}
          cache-from: |
            type=gha,scope=${{inputs.image_name}}
          cache-to: |
            type=gha,scope=${{inputs.image_name}},mode=max

      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v1
        env:
          GITHUB_TOKEN: ${{ inputs.github_token }}

      - name: Create Release
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ inputs.github_token }}
        with:
          tag_name: ${{ steps.versioning.outputs.version }}
          release_name: ${{ steps.versioning.outputs.version }}
          body: ${{steps.github_release.outputs.changelog}}
          prerelease: true
