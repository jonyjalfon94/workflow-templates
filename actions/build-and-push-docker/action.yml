name: "Build and Push Docker"
description: "Build a container image and Pushes it to Docker registry"

inputs:
  docker_username:
    description: "Username for Docker registry"
    required: true
  docker_password:
    description: "Password for Docker registry"
    required: true
  image_name:
    description: "Name of the image to push"
    required: true
  tag: 
    description: "How to tag the image. Default: latest"
    required: false
  build_args:
    description: "A list of extra build args. Default: []"
    required: false

runs:
  using: "composite"
  steps:

      - uses: actions/checkout@v2
        with:
          path: ${{ github.repository }}


      - name: Login to the Registry
        uses: docker/login-action@v1
        with:
          username: ${{inputs.docker_username}}
          password: ${{inputs.docker_password}}
      
      - name: Setup BuildX
        uses: docker/setup-buildx-action@v1

      - name: Set the tag
        shell: bash
        run: |
          if [ -z "${{inputs.tag}}" ]
          then
            echo "final_tag=latest" >> $GITHUB_ENV
          else
            echo "final_tag=${{inputs.tag}}" >> $GITHUB_ENV
          fi

      - name: Generate Docker Metadata
        id: metadata
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ inputs.docker_username }}/${{ inputs.image_name }}
          # generate Docker tags based on the following events/attributes
          tags: |
            ${{ github.sha }}
            latest

      - name: Build and Push the Image
        uses: docker/build-push-action@v2
        with:
          context: ${{ github.repository }}
          push: false
          tags: ${{ steps.metadata.outputs.tags }}
          build-args: ${{ inputs.build_args }}
          target: release
          cache-from: |
            type=gha,scope=prod
          cache-to: |
            type=gha,scope=prod,mode=max
